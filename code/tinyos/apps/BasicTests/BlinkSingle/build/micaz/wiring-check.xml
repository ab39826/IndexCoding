<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="49:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6a50c162d8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6a50a47618"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6a50a47618"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6a50bf6278"/></to>
    </wire>
    <wire loc="51:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b6a50c07630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6a50c46a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b6a50c46a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6a50c536a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6a50c22c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6a50a4bcf0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6a50a4bcf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6a50c2d5e8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6a50a54a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6a50c600c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6a50bf68b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6a50951390"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6a50951390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6a50a0dc00"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6a50bf5398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6a50a528e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6a50a528e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6a50a56020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6a50bf5a60"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b6a50a54a30"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6a50a59790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6a50bd9650"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b6a50a56d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6a50bd9020"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b6a50a566c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6a50c4c2d8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b6a50a566c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6a50a58680"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6a50a58680"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6a50a660e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6a50a58d10"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b6a50a50508"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b6a50a6d388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b6a50a71e00"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b6a50a71e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6a50af3740"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6a50a654f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b6a50a58d10"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b6a50aa3968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50b8b970"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b6a50a904d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6a50b2c020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6a50b2c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f89480"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b6a50aa24d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6a50b2ed60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6a50b2ed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50ff1480"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b6a50aa81a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6a50b435b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6a50b435b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a51041480"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b6a50a7c1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6a50b01a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6a50b01a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50e4e480"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b6a50a9be00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6a50b452a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6a50b452a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a51047480"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b6a50a7a4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6a50b09bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6a50b09bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50eaf3e0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b6a50a8a658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6a50b18740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6a50b18740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f22480"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b6a50a8d968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6a50b29430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6a50b29430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f7f480"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b6a50a9f968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6a50b3c120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6a50b3c120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50fe7480"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b6a50a74968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6a50af62a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6a50af62a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50e40480"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b6a50a85968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6a50b05020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6a50b05020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50ea5480"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b6a50a87af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6a50b14bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6a50b14bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f18480"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b6a50a98e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6a50b268c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6a50b268c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f98480"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b6a50aa5658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6a50b3fa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6a50b3fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a5105d480"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b6a50aaf348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50ba0020"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b6a50a951a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6a50b30a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6a50b30a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50fd3480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6a50af3740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50e54480"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b6a50a81020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6a50b11430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6a50b11430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50ebc480"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b6a50ab1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50b98ab0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b6a50a7f348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6a50b1a500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6a50b1a500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f083e0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b6a50a8f658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6a50b2b120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6a50b2b120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f86480"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b6a50aa1658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6a50b2de18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6a50b2de18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50fed480"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b6a50aa7348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6a50b42740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6a50b42740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a5103e480"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b6a50a7b348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6a50b00bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6a50b00bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50e4b480"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b6a50a79658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6a50b08d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6a50b08d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50eac480"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b6a50a897e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6a50b168c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6a50b168c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f1e480"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b6a50a9aaf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6a50b285b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6a50b285b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f7c480"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b6a50a9eaf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6a50b3b2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6a50b3b2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50fe4480"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b6a50a73af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6a50af5430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6a50af5430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50e3c480"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b6a50a84af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6a50b04120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6a50b04120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50ec2480"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b6a50a86c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6a50b13d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6a50b13d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f15480"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b6a50aa47e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6a50b50bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6a50b50bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a5105a480"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b6a50a91020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6a50b1ce40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6a50b1ce40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f6a3e0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b6a50a94348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6a50b2fbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6a50b2fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50ff4480"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b6a50aa9020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6a50b44430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6a50b44430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a51044480"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b6a50aae4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50b9b180"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b6a50a7d020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6a50b028c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6a50b028c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50e51480"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b6a50a801a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6a50b105b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6a50b105b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50eb9480"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b6a50a9dc78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6a50b461e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6a50b461e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a5104a3e0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b6a50a8c4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6a50b195b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6a50b195b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f05480"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b6a50a8e7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6a50b2a2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6a50b2a2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f83480"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b6a50aa07e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6a50b3d020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6a50b3d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50fea480"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b6a50aa64d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6a50b408c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6a50b408c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a51060480"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b6a50a697d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6a50af71e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6a50af71e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50e433e0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b6a50a787e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6a50b07e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6a50b07e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50ea9480"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b6a50a88968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6a50b15a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6a50b15a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f1b480"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b6a50a99c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6a50b27740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6a50b27740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f79480"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b6a50ab01a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50b93c38"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b6a50a96020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6a50b31930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6a50b31930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50fd63e0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b6a50a93e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6a50b23e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6a50b23e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50f33480"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b6a50a72c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6a50af45b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6a50af45b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50e57480"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b6a50a83e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6a50b032a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6a50b032a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6a50ebf480"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b6a5095dca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6a50a0cb08"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b6a50a16020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b6a5095cdc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6a50a382b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6a50d0b268"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6a50c4c2d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6a50c2d020"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6a50c2cce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b6a50c2ed18"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6a50c2ed18"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b6a50a73af0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6a50c2be70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b6a50c4e020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6a50c4e020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b6a50a74968"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6a50c29020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b6a50c4d1b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6a50c4d1b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b6a50a697d0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6a50c536a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6a50c60db8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6a50c60db8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6a50ddc5e0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6a50c600c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6a50c6c8a8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b6a50c6d298"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b6a50e04128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6a50c6c8a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6a50d7c1f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b6a50df2858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6a50d9dab0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6a50d98c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6a50c681c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6a50c681c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6a50d7c998"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6a50dfb330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b6a50c743b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b6a50c743b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6a50d78a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b6a50d78a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6a5111d3d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b6a50d7c1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6a51122980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6a50d7c998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6a51121160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b6a5111b5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6a50cf6de8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6a50cf6de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6a50d150f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b6a511484a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6a50d06020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b6a50d06020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6a50d10160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b6a511463b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6a50d05020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6a50d05020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6a50d0f190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b6a51143510"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b6a50d01228"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b6a50d01228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b6a50d0b968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b6a50dafcf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6a5095dca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b6a50ded930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6a5095dca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="8:BlinkC.nc" safe="">
      <documentation loc="1:BlinkC.nc">
        <short>&#10; Implementation for Blink application.</short>
        <long>&#10; Implementation for Blink application.  Toggle the red LED when a&#10; Timer fires.&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="36(BlinkAppC.Timer0):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6a50c823b0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6a50aba748" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6a50abaa90" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6a50abadd8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6a50abb020" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6a50abb388" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6a50abb6f0" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b6a50abba20" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6a50b48020" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6a50b48388" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6a50b486f0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b6a50b48a20" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b6a50c823b0" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6a50c823b0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b6a50c826a0" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b6a50c8f978" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6a50c8f978"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b6a50c8fc68" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6a50c6ac60" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6a50c6ac60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6a50dadcc8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6a50dadcc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b6a50daa020" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6a50deb9f0" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6a50deb9f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b6a50a54a30" loc="47:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6a50a54a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a54d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6a50a47618" loc="46:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6a50a47618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6a50a47968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6a50a50508" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6a50a50508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a50858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6a50a528e8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6a50a528e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a52c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b6a50a59790" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6a50a59790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b6a50a59ae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b6a50a59c68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b6a50a59df0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b6a50a50020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b6a50a501a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b6a50a566c0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b6a50a566c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a56a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6a50a56020" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6a50a56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a56370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b6a50a56d88" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b6a50a56d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a55170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6a50a58d10" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6a50a58d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a5c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6a50a58680" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6a50a58680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a589d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6a50a654f8" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6a50a654f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a65848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b6a50a6d388" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b6a50a6d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a6d6d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a6d860"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a6d9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a6db70"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a6dcf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a6de80"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a65030"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a651b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6a50a660e0" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6a50a660e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a66430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b6a50aa3968" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b6a50aa3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ab20f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ab2278"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ab2400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ab2588"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ab2710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50ab2898"/>
        <function-ref name="set" scoped="" ref="0x2b6a50ab2a20"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50ab2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b6a50a904d0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b6a50a904d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a90820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a909a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a90b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a90cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a90e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a8f020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a8f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a8f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b6a50aa24d0" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b6a50aa24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aa2820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aa29a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aa2b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aa2cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aa2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aa1020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aa11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aa1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b6a50aa81a0" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b6a50aa81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aa84f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aa8678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aa8800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aa8988"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aa8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aa8c98"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aa8e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aa7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b6a50a7c1a0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b6a50a7c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a7c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a7c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a7c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a7c988"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a7cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a7cc98"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a7ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b6a50a9be00" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b6a50a9be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aaa1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aaa330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aaa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aaa640"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aaa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aaa950"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aaaad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aaac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b6a50a7a4d0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b6a50a7a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a7a820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a7a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a7ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a7acb8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a7ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a79020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a791a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a79330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b6a50a8a658" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b6a50a8a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a8a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a8ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a8acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a8ae40"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a89020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a891a8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a89330"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a894b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b6a50a8d968" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b6a50a8d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a8dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a8de40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a9a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a9a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a9a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a9a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a9a640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a9a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b6a50a9f968" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b6a50a9f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a9fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a9fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a9e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a9e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a9e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a9e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a9e640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a9e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b6a50a74968" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b6a50a74968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a74cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a74e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a73020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a731a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a73330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a734b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a73640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a737c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b6a50a85968" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b6a50a85968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a85cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a85e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a84020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a841a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a84330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a844b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a84640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a847c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b6a50a87af0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b6a50a87af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a87e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a86020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a861a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a86330"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a864b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a86640"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a867c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a86950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b6a50a98e00" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b6a50a98e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a971a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a97330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a974b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a97640"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a977c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a97950"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a97ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a97c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b6a50aa5658" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b6a50aa5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aa59a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aa5b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aa5cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aa5e40"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aa4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aa41a8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aa4330"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aa44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b6a50aaf348" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b6a50aaf348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aaf698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aaf820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aaf9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aafb30"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aafcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aafe40"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aae020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b6a50a951a0" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b6a50a951a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a954f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a95678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a95800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a95988"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a95b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a95c98"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a95e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b6a50a71e00" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b6a50a71e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a7e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a7e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a7e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a7e640"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a7e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a7e950"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a7ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a7ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b6a50a81020" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b6a50a81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a81370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a814f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a81680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a81808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a81990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a81b18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a81ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a81e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b6a50ab1020" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b6a50ab1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ab1370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ab14f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ab1680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ab1808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ab1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50ab1b18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50ab1ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50ab1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b6a50a7f348" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b6a50a7f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a7f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a7f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a7f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a7fb30"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a7fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a7fe40"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a8c020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a8c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b6a50a8f658" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b6a50a8f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a8f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a8fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a8fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a8fe40"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a8e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a8e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a8e330"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a8e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b6a50aa1658" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b6a50aa1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aa19a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aa1b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aa1cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aa1e40"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aa0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aa01a8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aa0330"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aa04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b6a50aa7348" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b6a50aa7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aa7698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aa7820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aa79a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aa7b30"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aa7cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aa7e40"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aa6020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aa61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b6a50a7b348" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b6a50a7b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a7b698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a7b820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a7b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a7bb30"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a7bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a7be40"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a7a020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a7a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b6a50a79658" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b6a50a79658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a799a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a79b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a79cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a79e40"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a78020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a781a8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a78330"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a784b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b6a50a897e0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b6a50a897e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a89b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a89cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a89e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a88020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a881a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a88330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a884b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a88640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b6a50a9aaf0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b6a50a9aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a9ae40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a99020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a991a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a99330"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a994b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a99640"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a997c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a99950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b6a50a9eaf0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b6a50a9eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a9ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a9d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a9d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a9d330"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a9d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a9d640"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a9d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a9d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b6a50a73af0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b6a50a73af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a73e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a72020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a721a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a72330"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a724b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a72640"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a727c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a72950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b6a50a84af0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b6a50a84af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a83020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a831a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a83330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a834b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a83640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a837c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a83950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a83ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b6a50a86c78" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b6a50a86c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a93020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a931a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a93330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a934b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a93640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a937c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a93950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a93ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b6a50aa47e0" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b6a50aa47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aa4b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aa4cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aa4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aa3020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aa31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aa3330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aa34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aa3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b6a50a91020" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b6a50a91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a91570"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a916f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a91880"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a91a08"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a91b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a91d18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a90020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b6a50a94348" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b6a50a94348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a94698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a94820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a949a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a94b30"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a94cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a94e40"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aa2020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aa21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b6a50aa9020" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b6a50aa9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aa9370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aa94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aa9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aa9808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aa9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aa9b18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aa9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aa9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b6a50aae4d0" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b6a50aae4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aae820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aae9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aaeb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aaecb8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aaee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aad020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aad1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b6a50a7d020" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b6a50a7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a7d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a7d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a7d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a7d808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a7d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a7db18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a7dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a7de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b6a50a801a0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b6a50a801a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a804f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a80678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a80800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a80988"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a80b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a80c98"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a80e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b6a50a9dc78" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b6a50a9dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a9b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a9b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a9b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a9b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a9b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a9b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a9b950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a9bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b6a50a8c4d0" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b6a50a8c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a8c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a8c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a8cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a8ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a8ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a8a020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a8a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a8a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b6a50a8e7e0" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b6a50a8e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a8eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a8ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a8ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a8d020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a8d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a8d330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a8d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a8d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b6a50aa07e0" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b6a50aa07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aa0b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aa0cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aa0e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a9f020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a9f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a9f330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a9f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a9f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b6a50aa64d0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b6a50aa64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aa6820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aa69a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aa6b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aa6cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aa6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aa5020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aa51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aa5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b6a50a697d0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b6a50a697d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a69b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a69ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a69e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a74020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a74330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a744b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a74640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b6a50a787e0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b6a50a787e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a78b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a78cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a78e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a85020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a85330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a854b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a85640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b6a50a88968" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b6a50a88968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a88cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a88e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a87020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a871a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a87330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a874b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a87640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a877c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b6a50a99c78" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b6a50a99c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a98020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a981a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a98330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a984b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a98640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a987c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a98950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a98ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b6a50ab01a0" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b6a50ab01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ab04f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ab0678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ab0800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ab0988"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ab0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50ab0c98"/>
        <function-ref name="set" scoped="" ref="0x2b6a50ab0e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50aaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b6a50a96020" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b6a50a96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a96370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a964f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a96680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a96808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a96990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a96b18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a96ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a96e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b6a50a93e00" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b6a50a93e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a921a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a92330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a924b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a92640"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a927c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a92950"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a92ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a92c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b6a50a72c78" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b6a50a72c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a71020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a711a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a71330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a714b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a71640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a717c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a71950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a71ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b6a50a83e00" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b6a50a83e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50a821a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50a82330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50a824b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50a82640"/>
        <function-ref name="get" scoped="" ref="0x2b6a50a827c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50a82950"/>
        <function-ref name="set" scoped="" ref="0x2b6a50a82ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50a82c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6a50af5430" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6a50af5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50af5780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50af5908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50af5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50af5c18"/>
        <function-ref name="get" scoped="" ref="0x2b6a50af5da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50af4020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50af41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50af4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6a50b028c8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6a50b028c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b02c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b02da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b01020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b011a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b01330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b014b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b01640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b017c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6a50af71e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6a50af71e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50af7538"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50af76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50af7848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50af79d0"/>
        <function-ref name="get" scoped="" ref="0x2b6a50af7b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50af7ce0"/>
        <function-ref name="set" scoped="" ref="0x2b6a50af7e68"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50af6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6a50af45b8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6a50af45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50af4908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50af4a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50af4c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50af4da0"/>
        <function-ref name="get" scoped="" ref="0x2b6a50af3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50af31a8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50af3330"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50af34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6a50b01a50" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6a50b01a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b01da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b00020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b001a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b00330"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b004b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b00640"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b007c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b00950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6a50af62a8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6a50af62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50af65f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50af6780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50af6908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50af6a90"/>
        <function-ref name="get" scoped="" ref="0x2b6a50af6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50af6da0"/>
        <function-ref name="set" scoped="" ref="0x2b6a50af5020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50af51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6a50af3740" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6a50af3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50af3a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50af3c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50af3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b02020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b02330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b024b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b02640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6a50b00bd8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6a50b00bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50aff020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50aff1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50aff330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50aff4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50aff640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50aff7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50aff950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50affad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50e433e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50e433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50e43730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50e438b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50e43a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50e43bc8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50e43d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50e42020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50e421a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50e42330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50e40480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50e40480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50e407d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50e40958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50e40ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50e40c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50e40df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50e3e020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50e3e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50e3e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50e3c480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50e3c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50e3c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50e3c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50e3cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50e3cc68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50e3cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50e3b020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50e3b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50e3b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50e57480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50e57480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50e577d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50e57958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50e57ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50e57c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50e57df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50e56020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50e561a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50e56330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50e54480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50e54480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50e547d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50e54958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50e54ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50e54c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50e54df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50e53020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50e531a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50e53330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50e51480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50e51480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50e517d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50e51958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50e51ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50e51c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50e51df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50e50020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50e501a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50e50330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50e4e480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50e4e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50e4e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50e4e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50e4eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50e4ec68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50e4edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50e4d020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50e4d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50e4d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50e4b480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50e4b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50e4b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50e4b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50e4bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50e4bc68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50e4bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50e4a020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50e4a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50e4a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6a50b07e18" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6a50b07e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b061a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b06330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b064b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b06640"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b067c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b06950"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b06ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b06c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6a50b032a8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6a50b032a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b035f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b03780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b03908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b03a90"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b03c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b03da0"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b11020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6a50b09bd0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6a50b09bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b08020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b081a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b08330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b084b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b08640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b087c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b08950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b08ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6a50b05020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6a50b05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b05370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b054f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b05680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b05808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b05990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b05b18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b05ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b05e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6a50b11430" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6a50b11430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b11780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b11908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b11a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b11c18"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b11da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b10020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b101a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b10330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6a50b08d60" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6a50b08d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b070d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b07260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b073e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b07570"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b076f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b07880"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b07a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b07b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6a50b04120" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6a50b04120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b04470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b045f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b04780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b04908"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b04a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b04c18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b04da0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6a50b105b8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6a50b105b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b10908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b10a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b10c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b10da0"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b0f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b0f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b0f330"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b0f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50eaf3e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50eaf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50eaf730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50eaf8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50eafa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50eafbc8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50eafd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50eae020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50eae1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50eae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50eac480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50eac480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50eac7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50eac958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50eacae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50eacc68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50eacdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50eab020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50eab1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50eab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50ea9480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50ea9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ea97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ea9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ea9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ea9c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ea9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50ea7020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50ea71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50ea7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50ea5480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50ea5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ea57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ea5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ea5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ea5c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ea5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50ea4020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50ea41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50ea4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50ec2480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50ec2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ec27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ec2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ec2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ec2c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ec2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50ec1020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50ec11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50ec1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50ebf480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50ebf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ebf7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ebf958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ebfae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ebfc68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ebfdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50ebe020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50ebe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50ebe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50ebc480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50ebc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ebc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ebc958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ebcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ebcc68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ebcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50ebb020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50ebb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50ebb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50eb9480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50eb9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50eb97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50eb9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50eb9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50eb9c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50eb9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50eb8020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50eb81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50eb8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6a50b18740" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6a50b18740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b18a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b18c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b18da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b16020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b16330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b164b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b16640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6a50b14bd8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6a50b14bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b13020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b131a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b13330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b134b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b13640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b137c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b13950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b13ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6a50b1a500" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6a50b1a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b1a850"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b1a9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b1ab60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b1ace8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b1ae70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b19020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b191a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b19330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6a50b168c8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6a50b168c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b16c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b16da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b15020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b151a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b15330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b154b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b15640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b157c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6a50b13d60" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6a50b13d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b230d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b23260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b233e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b23570"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b236f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b23880"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b23a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b23b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6a50b195b8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6a50b195b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b19908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b19a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b19c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b19da0"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b18020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b181a8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b18330"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b184b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6a50b15a50" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6a50b15a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b15da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b14020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b141a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b14330"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b144b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b14640"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b147c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b14950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6a50b23e18" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6a50b23e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b221a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b22330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b224b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b22640"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b227c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b22950"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b22ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b22c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f083e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f083e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f08730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f088b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f08a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f08bc8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f08d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f07020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f071a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f07330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f05480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f05480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f057d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f05958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f05ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f05c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f05df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f04020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f041a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f22480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f22480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f227d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f22958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f22ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f22c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f22df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f20020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f201a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f20330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f1e480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f1e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f1e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f1e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f1eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f1ec68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f1edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f1d020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f1d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f1d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f1b480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f1b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f1b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f1b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f1bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f1bc68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f1bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f1a020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f1a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f1a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f18480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f18480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f187d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f18958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f18ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f18c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f18df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f17020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f171a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f17330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f15480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f15480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f157d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f15958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f15ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f15c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f15df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f14020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f141a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f14330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f33480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f33480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f337d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f33958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f33ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f33c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f33df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f32020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f321a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f32330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6a50b2b120" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6a50b2b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b2b470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b2b5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b2b780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b2b908"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b2ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b2bc18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b2bda0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6a50b285b8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6a50b285b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b28908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b28a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b28c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b28da0"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b27020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b271a8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b27330"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b274b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6a50b1ce40" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6a50b1ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b1b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b1b348"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b1b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b1b658"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b1b7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b1b968"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b1baf0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b1bc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6a50b2a2a8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6a50b2a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b2a5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b2a780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b2a908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b2aa90"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b2ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b2ada0"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b29020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6a50b27740" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6a50b27740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b27a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b27c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b27da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b26020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b26330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b264b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b26640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6a50b2c020" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6a50b2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b2c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b2c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b2c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b2c808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b2c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b2cb18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b2cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b2ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6a50b29430" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6a50b29430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b29780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b29908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b29a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b29c18"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b29da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b28020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b281a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b28330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6a50b268c8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6a50b268c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b26c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b26da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b25020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b251a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b25330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b254b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b25640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b257c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f6a3e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f6a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f6a730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f6a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f6aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f6abc8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f6ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f69020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f691a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f69330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f89480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f89480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f897d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f89958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f89ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f89c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f89df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f88020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f881a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f88330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f86480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f86480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f867d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f86958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f86ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f86c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f86df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f85020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f851a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f85330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f83480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f83480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f837d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f83958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f83ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f83c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f83df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f81020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f811a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f81330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f7f480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f7f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f7f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f7f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f7fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f7fc68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f7fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f7e020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f7e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f7e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f7c480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f7c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f7c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f7c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f7cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f7cc68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f7cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f7b020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f7b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f7b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f79480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f79480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f797d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f79958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f79ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f79c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f79df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f9a020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f9a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f9a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50f98480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50f98480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50f987d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50f98958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50f98ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50f98c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50f98df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50f97020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50f971a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50f97330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6a50b2fbd8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6a50b2fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b2e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b2e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b2e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b2e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b2e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b2e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b2e950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b2ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6a50b3d020" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6a50b3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b3d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b3d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b3d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b3d808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b3d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b3db18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b3dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b3de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6a50b31930" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6a50b31930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b31c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b31e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b30020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b301a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b30330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b304b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b30640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6a50b2ed60" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6a50b2ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b2d0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b2d260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b2d3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b2d570"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b2d6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b2d880"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b2da08"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b2db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6a50b3c120" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6a50b3c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b3c470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b3c5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b3c780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b3c908"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b3ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b3cc18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b3cda0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6a50b30a50" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6a50b30a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b30da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b2f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b2f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b2f330"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b2f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b2f640"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b2f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b2f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6a50b2de18" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6a50b2de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b3e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b3e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b3e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b3e640"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b3e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b3e950"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b3ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b3ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6a50b3b2a8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6a50b3b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b3b5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b3b780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b3b908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b3ba90"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b3bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b3bda0"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b39020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50fd63e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50fd63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50fd6730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50fd68b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50fd6a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50fd6bc8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50fd6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50fd5020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50fd51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50fd5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50fd3480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50fd3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50fd37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50fd3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50fd3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50fd3c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50fd3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50fd2020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50fd21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50fd2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50ff4480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50ff4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ff47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ff4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ff4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ff4c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ff4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50ff3020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50ff31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50ff3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50ff1480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50ff1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ff17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ff1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ff1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ff1c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ff1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50fef020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50fef1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50fef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50fed480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50fed480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50fed7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50fed958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50fedae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50fedc68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50feddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50fec020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50fec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50fec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50fea480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50fea480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50fea7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50fea958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50feaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50feac68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50feadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50fe9020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50fe91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50fe9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50fe7480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50fe7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50fe77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50fe7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50fe7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50fe7c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50fe7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50fe6020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50fe61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50fe6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50fe4480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50fe4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50fe47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50fe4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50fe4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50fe4c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50fe4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50fe3020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50fe31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50fe3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6a50b44430" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6a50b44430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b44780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b44908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b44a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b44c18"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b44da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b43020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b431a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b43330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6a50b408c8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6a50b408c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b40c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b40da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b3f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b3f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b3f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b3f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b3f640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b3f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6a50b461e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6a50b461e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b46538"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b466c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b46848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b469d0"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b46b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b46ce0"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b46e68"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6a50b435b8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6a50b435b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b43908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b43a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b43c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b43da0"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b42020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b421a8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b42330"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b424b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6a50b3fa50" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6a50b3fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b3fda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b50020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b501a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b50330"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b504b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b50640"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b507c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b50950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6a50b452a8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6a50b452a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b455f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b45780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b45908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b45a90"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b45c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b45da0"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b44020"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6a50b42740" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6a50b42740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b42a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b42c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b42da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b40020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b40330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b404b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b40640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6a50b50bd8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6a50b50bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b4f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b4f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b4f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b4f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b4f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b4f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b4f950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b4fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a5104a3e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a5104a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a5104a730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a5104a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a5104aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a5104abc8"/>
        <function-ref name="get" scoped="" ref="0x2b6a5104ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a51049020"/>
        <function-ref name="set" scoped="" ref="0x2b6a510491a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a51049330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a51047480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a51047480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a510477d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a51047958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a51047ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a51047c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a51047df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a51046020"/>
        <function-ref name="set" scoped="" ref="0x2b6a510461a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a51046330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a51044480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a51044480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a510447d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a51044958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a51044ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a51044c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a51044df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a51043020"/>
        <function-ref name="set" scoped="" ref="0x2b6a510431a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a51043330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a51041480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a51041480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a510417d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a51041958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a51041ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a51041c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a51041df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a51040020"/>
        <function-ref name="set" scoped="" ref="0x2b6a510401a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a51040330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a5103e480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a5103e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a5103e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a5103e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a5103eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a5103ec68"/>
        <function-ref name="get" scoped="" ref="0x2b6a5103edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a51062020"/>
        <function-ref name="set" scoped="" ref="0x2b6a510621a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a51062330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a51060480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a51060480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a510607d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a51060958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a51060ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a51060c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a51060df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a5105f020"/>
        <function-ref name="set" scoped="" ref="0x2b6a5105f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a5105f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a5105d480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a5105d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a5105d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a5105d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a5105dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a5105dc68"/>
        <function-ref name="get" scoped="" ref="0x2b6a5105ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a5105c020"/>
        <function-ref name="set" scoped="" ref="0x2b6a5105c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a5105c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a5105a480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a5105a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a5105a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a5105a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a5105aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a5105ac68"/>
        <function-ref name="get" scoped="" ref="0x2b6a5105adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a51059020"/>
        <function-ref name="set" scoped="" ref="0x2b6a510591a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a51059330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b49ac0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b49ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b49e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b69020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b691a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b69330"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b694b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b69640"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b697c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b69950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b65db8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b65db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b64170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b642f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b64480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b64608"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b64790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b64918"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b64aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b64c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b723e0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b723e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b72730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b728b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b72a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b72bc8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b72d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b71020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b711a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b71330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b6d7e8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b6d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b6db38"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b6dcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b6de48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b6c020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b6c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b6c330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b6c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b6c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b7ac38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b7ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b79020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b791a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b79330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b794b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b79640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b797c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b79950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b79ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b75020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b75370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b754f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b75680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b75808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b75990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b75b18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b75ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b75e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b82480" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b82480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b827d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b82958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b82ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b82c68"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b82df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b81020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b811a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b81330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b8f7e8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b8f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b8fb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b8fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b8fe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b8e020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b8e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b8e330"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b8e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b8e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b8b970" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b8b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b8bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b8be48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b8a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b8a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b8a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b8a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b8a640"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b8a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b98ab0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b98ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b98e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b97020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b971a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b97330"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b974b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b97640"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b977c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b97950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b93c38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b93c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b92020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b921a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b92330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b924b8"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b92640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b927c8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b92950"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b92ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50ba0020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50ba0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50ba0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50ba04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50ba0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50ba0808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50ba0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50ba0b18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50ba0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50ba0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6a50b9b180" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6a50b9b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50b9b4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50b9b658"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50b9b7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50b9b968"/>
        <function-ref name="get" scoped="" ref="0x2b6a50b9baf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50b9bc78"/>
        <function-ref name="set" scoped="" ref="0x2b6a50b9be00"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50b9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6a50bd9020" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6a50bd9020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b6a5094bc48"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b6a5094bc48"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50bd9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b6a50bd9650" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6a50bd9650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b6a50bd99a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b6a50bd9b28"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b6a50bd9cb0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b6a50bd9e38"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b6a50bd8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b6a50bf5a60" loc="49:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6a50bf5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50bf5db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6a50bf6278" loc="46:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6a50bf6278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6a50bf65c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b6a50bf5398" loc="48:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6a50bf5398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50bf56e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b6a50bf68b0" loc="47:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6a50bf68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50bf6c00"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6a50bf6d88"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6a50bf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6a5095dca0" loc="37:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b6a5095dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6a5094a020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6a5094a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6a50951390" loc="36:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6a50951390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a509516e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6a50951868"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6a509519f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6a50a0cb08" loc="45:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b6a50a0cb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6a50a0ce58"/>
        <function-ref name="runTask" scoped="" ref="0x2b6a50a0b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b6a50a16020" loc="46:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b6a50a16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6a50a16370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6a50a0dc00" loc="44:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6a50a0dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50a0c020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6a50a0c1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6a50a0c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b6a50a382b0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6a50a382b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6a50a38600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b6a5095cdc8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b6a5095cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6a50a30170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b6a50a2c240" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b6a50a2c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b6a50a2c590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b6a50c07630" loc="10:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b6a50c07630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a50c198f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50bfc020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6a50bfcd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6a50bfc8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b6a50c181c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b6a50c19d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a50bfc470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6a50bfd1e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6a50c19320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6a50bfd688"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50bfdb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b6a50c162d8" loc="12:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6a50c162d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6a50c16628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6a50c22c38" loc="11:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6a50c22c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6a50c17020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6a50c171a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6a50c17330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6a50c174b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6a50c17640"/>
        <function-ref name="get" scoped="" ref="0x2b6a50c177c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6a50c17950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6a50c16020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50c17ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6a50c17c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b6a50c17de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6a50a4bcf0" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6a50a4bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6a50c1b0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6a50c1b228"/>
        <function-ref name="led1On" scoped="" ref="0x2b6a50c1b3b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6a50c1b538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6a50c1b6c0"/>
        <function-ref name="get" scoped="" ref="0x2b6a50c1b848"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6a50c1b9d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6a50c1a020"/>
        <function-ref name="set" scoped="" ref="0x2b6a50c1bb58"/>
        <function-ref name="led0On" scoped="" ref="0x2b6a50c1bce0"/>
        <function-ref name="led2On" scoped="" ref="0x2b6a50c1be68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b6a50c2cce8" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b6a50c2cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50c2b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50c2b228"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50c2b3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50c2b538"/>
        <function-ref name="get" scoped="" ref="0x2b6a50c2b6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50c2b848"/>
        <function-ref name="set" scoped="" ref="0x2b6a50c2b9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50c2bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6a50c2d020" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6a50c2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50c2d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b6a50c2be70" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b6a50c2be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50c2a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50c2a370"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50c2a4f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50c2a680"/>
        <function-ref name="get" scoped="" ref="0x2b6a50c2a808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50c2a990"/>
        <function-ref name="set" scoped="" ref="0x2b6a50c2ab18"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50c2aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6a50c2d5e8" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6a50c2d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6a50c2d938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6a50c2dac0"/>
        <function-ref name="led1On" scoped="" ref="0x2b6a50c2dc48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6a50c2ddd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6a50c2c020"/>
        <function-ref name="get" scoped="" ref="0x2b6a50c2c1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6a50c2c330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6a50c2c950"/>
        <function-ref name="set" scoped="" ref="0x2b6a50c2c4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6a50c2c640"/>
        <function-ref name="led2On" scoped="" ref="0x2b6a50c2c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b6a50c29020" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b6a50c29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50c29370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50c294f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50c29680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50c29808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50c29990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50c29b18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50c29ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50c29e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b6a50c2ed18" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b6a50c2ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50c500a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50c50228"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50c503b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50c50538"/>
        <function-ref name="get" scoped="" ref="0x2b6a50c506c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50c50848"/>
        <function-ref name="set" scoped="" ref="0x2b6a50c509d0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50c50b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b6a50c4e020" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b6a50c4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50c4e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50c4e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50c4e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50c4e808"/>
        <function-ref name="get" scoped="" ref="0x2b6a50c4e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50c4eb18"/>
        <function-ref name="set" scoped="" ref="0x2b6a50c4eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50c4ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b6a50c4c2d8" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6a50c4c2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50c4c628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b6a50c4d1b0" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b6a50c4d1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6a50c4d500"/>
        <function-ref name="isInput" scoped="" ref="0x2b6a50c4d688"/>
        <function-ref name="toggle" scoped="" ref="0x2b6a50c4d810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6a50c4d998"/>
        <function-ref name="get" scoped="" ref="0x2b6a50c4db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6a50c4dca8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50c4de30"/>
        <function-ref name="clr" scoped="" ref="0x2b6a50c4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6a50c46a60" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6a50c46a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a50e0ed60"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50e0f470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6a50e0e1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6a50e0fd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b6a50e0c648"/>
        <function-ref name="gett0" scoped="" ref="0x2b6a50e0c1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a50e0f8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6a50e10620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6a50e0e790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6a50e10ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50e0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6a50c536a0" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b6a50c536a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a50c65a18"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50c51158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6a50c51e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6a50c519f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b6a50c642e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b6a50c65e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a50c515a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6a50c52370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6a50c65448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6a50c52810"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50c52cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6a50c60db8" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b6a50c60db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a50c5c088"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50c5e708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6a50c5d470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6a50c5d020"/>
        <function-ref name="getdt" scoped="" ref="0x2b6a50c5c928"/>
        <function-ref name="gett0" scoped="" ref="0x2b6a50c5c4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a50c5eb58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6a50c5f930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6a50c5da40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6a50c5fdd0"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50c5e2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6a50c6d298" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b6a50c6d298"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6a50c6de18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6a50c600c0" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6a50c600c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50c60410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b6a50c743b8" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b6a50c743b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6a50c73130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6a50c73a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6a50c735b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6a50c85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6a50c6c8a8" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6a50c6c8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50c6cbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b6a50c681c8" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6a50c681c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a50c77918"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50c67980"/>
        <function-ref name="startAt" scoped="" ref="0x2b6a50c77310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a50c67e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6a50c77da0"/>
        <function-ref name="start" scoped="" ref="0x2b6a50c67020"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50c674f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6a50d7c998" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6a50d7c998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a50d78020"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50d790c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b6a50d799d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a50d79548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6a50d784a8"/>
        <function-ref name="start" scoped="" ref="0x2b6a50d7b730"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50d7bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6a50d7c1f0" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6a50d7c1f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b6a5094b8e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b6a5094b8e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a50d7c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6a50d78a90" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6a50d78a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6a50d77828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6a50d76190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6a50d77cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6a50d76618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b6a511484a0" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6a511484a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6a511487f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6a51148978"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6a51148b00"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6a51148c88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6a51148e10"/>
        <function-ref name="setControl" scoped="" ref="0x2b6a51146020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6a51121160" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6a51121160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a5111e918"/>
        <function-ref name="fired" scoped="" ref="0x2b6a51120980"/>
        <function-ref name="startAt" scoped="" ref="0x2b6a5111e310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a51120e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6a5111eda0"/>
        <function-ref name="start" scoped="" ref="0x2b6a51120020"/>
        <function-ref name="stop" scoped="" ref="0x2b6a511204f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6a51122980" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6a51122980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6a51122cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6a5111d3d0" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6a5111d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6a5111c150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6a5111ca60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6a5111c5d8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6a5111b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b6a51143510" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b6a51143510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b6a51143860"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6a511439e8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b6a51143b70"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6a51143cf8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6a51143e80"/>
        <function-ref name="setAssr" scoped="" ref="0x2b6a51142030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b6a511463b0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6a511463b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6a51144c20"/>
        <function-ref name="fired" scoped="" ref="0x2b6a51145980"/>
        <function-ref name="get" scoped="" ref="0x2b6a51145020"/>
        <function-ref name="reset" scoped="" ref="0x2b6a51145e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b6a511430f8"/>
        <function-ref name="set" scoped="" ref="0x2b6a511454a8"/>
        <function-ref name="start" scoped="" ref="0x2b6a51144310"/>
        <function-ref name="stop" scoped="" ref="0x2b6a51144798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6a5111b5a0" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6a5111b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6a511176f8"/>
        <function-ref name="test" scoped="" ref="0x2b6a51118db8"/>
        <function-ref name="get" scoped="" ref="0x2b6a51119150"/>
        <function-ref name="setScale" scoped="" ref="0x2b6a51117b80"/>
        <function-ref name="getScale" scoped="" ref="0x2b6a51148088"/>
        <function-ref name="reset" scoped="" ref="0x2b6a51118020"/>
        <function-ref name="overflow" scoped="" ref="0x2b6a51119ab0"/>
        <function-ref name="isOn" scoped="" ref="0x2b6a51117270"/>
        <function-ref name="set" scoped="" ref="0x2b6a511195d8"/>
        <function-ref name="start" scoped="" ref="0x2b6a511184a8"/>
        <function-ref name="stop" scoped="" ref="0x2b6a51118930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6a50d06020" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6a50d06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6a50d06370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6a50d064f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6a50d06680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6a50d06808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6a50d06990"/>
        <function-ref name="setControl" scoped="" ref="0x2b6a50d06b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b6a50d01228" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b6a50d01228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b6a50d01578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6a50d01700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b6a50d01888"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6a50d01a10"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6a50d01b98"/>
        <function-ref name="setAssr" scoped="" ref="0x2b6a50d01d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6a50d05020" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6a50d05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6a50d037a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50d04560"/>
        <function-ref name="get" scoped="" ref="0x2b6a50d05ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b6a50d049e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6a50d03c30"/>
        <function-ref name="set" scoped="" ref="0x2b6a50d04088"/>
        <function-ref name="start" scoped="" ref="0x2b6a50d04e70"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50d03320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6a50cf6de8" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6a50cf6de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6a50d070f8"/>
        <function-ref name="test" scoped="" ref="0x2b6a50d09798"/>
        <function-ref name="get" scoped="" ref="0x2b6a50cf3a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b6a50d07580"/>
        <function-ref name="getScale" scoped="" ref="0x2b6a50d07a58"/>
        <function-ref name="reset" scoped="" ref="0x2b6a50cf2980"/>
        <function-ref name="overflow" scoped="" ref="0x2b6a50cf24f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6a50d09c20"/>
        <function-ref name="set" scoped="" ref="0x2b6a50cf2020"/>
        <function-ref name="start" scoped="" ref="0x2b6a50cf2e08"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50d09310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6a50d10160" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6a50d10160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6a50d104b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6a50d10638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6a50d107c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6a50d10948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6a50d10ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b6a50d10c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b6a50d0b268" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6a50d0b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6a50d0b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b6a50d0b968" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b6a50d0b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b6a50d0bcb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6a50d0be40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b6a50d0a020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6a50d0a1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6a50d0a330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b6a50d0a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6a50d0f190" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6a50d0f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6a50d0c930"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50d0e6d0"/>
        <function-ref name="get" scoped="" ref="0x2b6a50d0fd10"/>
        <function-ref name="reset" scoped="" ref="0x2b6a50d0eb58"/>
        <function-ref name="isOn" scoped="" ref="0x2b6a50d0cdb8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50d0e1f8"/>
        <function-ref name="start" scoped="" ref="0x2b6a50d0c020"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50d0c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6a50d150f8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6a50d150f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6a50d11270"/>
        <function-ref name="test" scoped="" ref="0x2b6a50d13930"/>
        <function-ref name="get" scoped="" ref="0x2b6a50d15c78"/>
        <function-ref name="setScale" scoped="" ref="0x2b6a50d116f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b6a50d11bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b6a50d14a90"/>
        <function-ref name="overflow" scoped="" ref="0x2b6a50d14608"/>
        <function-ref name="isOn" scoped="" ref="0x2b6a50d13db8"/>
        <function-ref name="set" scoped="" ref="0x2b6a50d14130"/>
        <function-ref name="start" scoped="" ref="0x2b6a50d13020"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50d134a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b6a50dafcf0" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b6a50dafcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6a50dae0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6a50dae228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b6a50d98c70" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6a50d98c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a50daf410"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50db04a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6a50db0db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a50db0930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6a50daf898"/>
        <function-ref name="start" scoped="" ref="0x2b6a50d979f0"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50db0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6a50d9dab0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6a50d9dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a50d99d60"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50d9b470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6a50d991c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6a50d9bd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b6a50d98648"/>
        <function-ref name="gett0" scoped="" ref="0x2b6a50d981f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a50d9b8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6a50d9c620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6a50d99790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6a50d9cac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50d9b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b6a50ded930" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b6a50ded930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6a50dedc80"/>
        <function-ref name="runTask" scoped="" ref="0x2b6a50dede08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b6a50df2858" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b6a50df2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a50deebc0"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50def1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6a50dee020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6a50defa60"/>
        <function-ref name="getdt" scoped="" ref="0x2b6a50ded4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b6a50ded088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a50def610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6a50df13d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6a50dee5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6a50df1878"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50df1d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6a50ddc5e0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6a50ddc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6a50df4988"/>
        <function-ref name="fired" scoped="" ref="0x2b6a50df5020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6a50df5d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6a50df5900"/>
        <function-ref name="getdt" scoped="" ref="0x2b6a50df22d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b6a50df4df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6a50df5490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6a50df7198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6a50df4398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6a50df7658"/>
        <function-ref name="stop" scoped="" ref="0x2b6a50df7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6a50e04128" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b6a50e04128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6a50e04ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6a50dfb330" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6a50dfb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6a509cf530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6a509cf888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6a50dfa0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6a50dfa9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6a50dfa548"/>
        <function-ref name="overflow" scoped="" ref="0x2b6a50dfae58"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6a50a54588" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6a50957780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b6a50a47258" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b6a50a59408" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6a5010d378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b6a50a59198" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b6a50a51b98" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6a5010d378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b6a50a4e5b8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b6a50a4e348" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b6a50a5a0a8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b6a50a4edd0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b6a50a5a8f0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b6a50a70ab0" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b6a50a6f1d8" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b6a50a63d20" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b6a50a6d020" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6a50a70400" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b6a50a6f890" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6a50a63020" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b6a50a63690" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6a50952020" loc="46:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b6a50951020" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b6a50952738" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b6a50954ba0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6a50957780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b6a5095d3e0" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b6a50a0bca0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b6a50a2bd60" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b6a509ae1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b6a50a30e60" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6a50bfe8e0" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6a50bfe8e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6a50c08178" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6a50c0dce0" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b6a50c0b910" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6a50c0b378" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6a50c0b690" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b6a50c0cc10" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b6a50c070d8" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b6a50c08898" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6a50c0c478" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b6a50c0f420" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6a50c0f1b0" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b6a50c0a800" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6a50c0a268" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6a50c0a580" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b6a50c0fe60" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6a50c0fbf0" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6a50c0d640" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b6a50c12070" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b6a50c127a8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b6a50c10020" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b6a50c10e70" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b6a50c23480" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6a50c23c18" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b6a50c10738" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6a50c22768" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b6a50c224f8" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b6a50c13900" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b6a50c24608" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b6a50c24d20" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6a50c6e518" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6a50c6e518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6a50c6eda8" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6a5010ddb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6a50c75a50" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6a50c75a50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6a50c75c80" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c75c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6a50c72548" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c75c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b6a50c87590" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b6a50c72d60" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6a50c87c80" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6a50c69738" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6a50c69738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6a50c69968" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c69968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6a50c78290" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c69968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6a50c7b418" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b6a50c7a920" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c69968"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c69968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6a50c7a380" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c69968"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b6a50c7a6a0" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c69968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6a50c7bb88" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b6a50c78a10" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c69968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6a50c7c4a8" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c69968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6a50c7c238" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50c69968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6a50c7cc78" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b6a50ca0110" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509dda08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6a509dde10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b6a50c9e4c0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509e9100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6a509e9508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b6a50c9f328" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509e1980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6a509e1d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b6a50c9fce0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509e1980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6a509e1d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b6a50c9fa70" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509e1980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6a509e1d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b6a50c9ee78" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509e9100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6a509e9508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b6a50c9ec08" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509e9100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6a509e9508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b6a50ca0ae0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509dda08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6a509dde10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6a50ca0870" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509dda08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6a509dde10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b6a50cc0c30" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b6a50cbf450" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b6a50cc0528" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b6a50cbfc00" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b6a50cc1378" loc="21:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509e3118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6a509e3520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b6a50cc1d28" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509e3118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6a509e3520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b6a50cc1ab8" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6a509e3118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6a509e3520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b6a50ca35b8" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50ca35b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b6a50cb0c50" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6a50cb1020" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6a50ca3e70" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50ca35b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b6a50cb1728" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b6a50cae3e0" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6a50cb27e0" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50ca35b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6a50cb2570" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6a50ca35b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6a50cb1e20" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6a50cb0538" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b6a50c9a870" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6a50c9a870"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b6a50ca9020" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b6a50c93020" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6a50c97178" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6a50c9a870"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b6a50ca9970" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b6a50ca9700" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b6a50ca8178" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6a5010b910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b6a50c96978" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6a50c96258" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b6a50c93778" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6a5094c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6a50c97ab0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6a50c9a870"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6a50c97840" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6a50c9a870"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6a50c940d8" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6a50c947c0" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
