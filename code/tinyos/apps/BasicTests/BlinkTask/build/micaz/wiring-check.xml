<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="51:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b4b6802b770"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b4b67e51618"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b4b67e51618"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b4b68000278"/></to>
    </wire>
    <wire loc="53:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b4b680117e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4b68067a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b4b68067a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b4b68077e28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2b4b68022900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4b68239020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b4b68239020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b4b68077e28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2b4b6801daf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4b68232550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b4b68232550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b4b68077e28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b4b6802c080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4b680402e8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b4b680402e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4b6803aab8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4b67e5ea30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4b68085758"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b4b680008b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b4b67d5b390"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b4b67d5b390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b4b67e17c00"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b4b67fff398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4b67e5c8e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4b67e5c8e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4b67e60020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4b67fffa60"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b4b67e5ea30"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4b67e63790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4b67fe3650"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b4b67e60d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4b67fe3020"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b4b67e606c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4b6806fd90"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b4b67e606c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b4b67e62680"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b4b67e62680"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b4b67e700e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b4b67e62d10"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b4b67e5a508"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b4b67e77388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b4b67e7be00"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b4b67e7be00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b4b67efd740"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b4b67e6f4f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b4b67e62d10"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b4b67ead968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b67f95970"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b4b67e9a4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b4b67f36020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b4b67f36020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b683b3710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b4b67eac4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b4b67f38d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b4b67f38d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6841e710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b4b67eb21a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b4b67f4d5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b4b67f4d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68472710"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b4b67e861a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b4b67f0ba50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b4b67f0ba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6828d710"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b4b67ea5e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b4b67f4f2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b4b67f4f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68478710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b4b67e844d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b4b67f13bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b4b67f13bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b682d46a8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b4b67e94658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b4b67f22740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b4b67f22740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6834a710"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b4b67e97968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b4b67f33430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b4b67f33430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b683aa710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b4b67ea9968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b4b67f46120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b4b67f46120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68414710"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b4b67e7e968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b4b67f002a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b4b67f002a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6827f6a8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b4b67e8f968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b4b67f0f020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b4b67f0f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b682eb710"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b4b67e91af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b4b67f1ebd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b4b67f1ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68340710"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b4b67ea2e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b4b67f308c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b4b67f308c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b683c4710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b4b67eaf658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b4b67f49a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b4b67f49a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6848e710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b4b67eb9348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b67faa020"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b4b67e9f1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b4b67f3aa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b4b67f3aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68400710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b4b67efd740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68275710"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b4b67e8b020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b4b67f1b430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b4b67f1b430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b682e1710"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b4b67ebb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b67fa2ab0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b4b67e89348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b4b67f24500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b4b67f24500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6832e6a8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b4b67e99658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b4b67f35120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b4b67f35120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b683b0710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b4b67eab658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b4b67f37e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b4b67f37e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6841b710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b4b67eb1348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b4b67f4c740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b4b67f4c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6846f710"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b4b67e85348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b4b67f0abd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b4b67f0abd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6828a710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b4b67e83658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b4b67f12d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b4b67f12d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b682d1710"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b4b67e937e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b4b67f208c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b4b67f208c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68347710"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b4b67ea4af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b4b67f325b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b4b67f325b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b683a6710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b4b67ea8af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b4b67f452a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b4b67f452a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68411710"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b4b67e7daf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b4b67eff430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b4b67eff430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6827c710"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b4b67e8eaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b4b67f0e120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b4b67f0e120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b682e7710"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b4b67e90c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b4b67f1dd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b4b67f1dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6835f710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b4b67eae7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b4b67f5abd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b4b67f5abd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6848b710"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b4b67e9b020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b4b67f26e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b4b67f26e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b683b66a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b4b67e9e348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b4b67f39bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b4b67f39bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68421710"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b4b67eb3020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b4b67f4e430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b4b67f4e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68475710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b4b67eb84d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b67fa5180"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b4b67e87020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b4b67f0c8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b4b67f0c8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68272710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b4b67e8a1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b4b67f1a5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b4b67f1a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b682de710"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b4b67ea7c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b4b67f501e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b4b67f501e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6847b6a8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b4b67e964d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b4b67f235b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b4b67f235b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6834d710"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b4b67e987e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b4b67f342a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b4b67f342a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b683ad710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b4b67eaa7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b4b67f47020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b4b67f47020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68418710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b4b67eb04d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b4b67f4a8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b4b67f4a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68492710"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b4b67e737d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b4b67f011e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b4b67f011e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68264520"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b4b67e827e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b4b67f11e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b4b67f11e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b682ce710"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b4b67e92968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b4b67f1fa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b4b67f1fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68344710"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b4b67ea3c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b4b67f31740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b4b67f31740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b683c7710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b4b67eba1a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b67f9dc38"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b4b67ea0020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b4b67f3b930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b4b67f3b930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b684036a8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b4b67e9de00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b4b67f2de18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b4b67f2de18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b6835c710"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b4b67e7cc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b4b67efe5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b4b67efe5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b68279710"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b4b67e8de00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b4b67f0d2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b4b67f0d2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4b682e4710"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b4b67d67ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4b67e16b08"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b4b67e20020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b4b67d66dc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4b67e422b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4b68131268"/></to>
    </wire>
    <wire loc="58:BlinkC.nc">
      <from><interface-ref name="computeTask" scoped="" ref="0x2b4b68034590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4b67d67ca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4b6806fd90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4b6803a4f0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b4b6804e1b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b4b6805c988"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b4b6805c988"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b4b67e7daf0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b4b6804d338"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b4b6805bb20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b4b6805bb20"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b4b67e7e968"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b4b6804b4c0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b4b68070ca8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b4b68070ca8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b4b67e737d0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b4b68077e28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b4b680824a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b4b680824a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4b682095e0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4b68085758"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4b6808c020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b4b6808f980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4b68216128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4b6808c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4b6818b1f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b4b68203858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4b681c9ab0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4b681c4c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b4b6809a838"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b4b6809a838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4b6818b998"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4b68229330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b4b68092e40"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b4b68092e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4b68188a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b4b68188a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4b68555a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b4b6818b1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4b68559060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4b6818b998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4b68559808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b4b68553b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4b6811cde8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b4b6811cde8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4b681220f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b4b6854eb60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b4b6812b020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b4b6812b020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b4b68136160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b4b6854db58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b4b6812a020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4b6812a020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b4b68135190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b4b6857cbb0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b4b68126228"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b4b68126228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b4b68131968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b4b681c0cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4b67d67ca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b4b6821a930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4b67d67ca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="39:BlinkC.nc" safe="">
      <documentation loc="32:BlinkC.nc">
        <short>&#10; Implementation for Blink application.</short>
        <long>&#10; Implementation for Blink application.  Toggle the red LED when a&#10; Timer fires.&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="36(BlinkAppC.Timer0):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b4b680a6c48"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="36(BlinkAppC.Timer1):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="36(BlinkAppC.Timer2):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b4b67ec4748" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b4b67ec4a90" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b4b67ec4dd8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b4b67ec5020" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b4b67ec5388" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b4b67ec56f0" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b4b67ec5a20" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b4b67f52020" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b4b67f52388" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b4b67f526f0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b4b67f52a20" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b4b680a6c48" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b4b680a6c48"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b4b680a3020" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b4b680af410" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b4b680af410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b4b680af700" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4b6808dc60" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4b6808dc60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4b681becc8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4b681becc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b4b681d7020" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4b682189f0" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4b682189f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b4b67e5ea30" loc="47:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b4b67e5ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e5ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b4b67e51618" loc="46:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b4b67e51618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b4b67e51968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b4b67e5a508" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b4b67e5a508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e5a858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4b67e5c8e8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4b67e5c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e5cc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b4b67e63790" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4b67e63790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b4b67e63ae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b4b67e63c68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b4b67e63df0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b4b67e5a020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b4b67e5a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b4b67e606c0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b4b67e606c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e60a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4b67e60020" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4b67e60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e60370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b4b67e60d88" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b4b67e60d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e5f170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b4b67e62d10" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b4b67e62d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e660a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b4b67e62680" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b4b67e62680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e629d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b4b67e6f4f8" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b4b67e6f4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e6f848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b4b67e77388" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b4b67e77388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e776d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e77860"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e779e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e77b70"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e77cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e77e80"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e6f030"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e6f1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b4b67e700e0" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b4b67e700e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e70430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b4b67ead968" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b4b67ead968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67ebc0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67ebc278"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67ebc400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ebc588"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ebc710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ebc898"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ebca20"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ebcba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b4b67e9a4d0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b4b67e9a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e9a820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e9a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e9ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e9acb8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e9ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e99020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e991a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e99330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b4b67eac4d0" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b4b67eac4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eac820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eac9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eacb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eaccb8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67eace40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67eab020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eab1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b4b67eb21a0" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b4b67eb21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eb24f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eb2678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eb2800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eb2988"/>
        <function-ref name="get" scoped="" ref="0x2b4b67eb2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67eb2c98"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eb2e20"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eb1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b4b67e861a0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b4b67e861a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e864f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e86678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e86800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e86988"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e86b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e86c98"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e86e20"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b4b67ea5e00" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b4b67ea5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eb41a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eb4330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eb44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eb4640"/>
        <function-ref name="get" scoped="" ref="0x2b4b67eb47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67eb4950"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eb4ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eb4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b4b67e844d0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b4b67e844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e84820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e849a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e84b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e84cb8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e84e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e83020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e831a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e83330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b4b67e94658" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b4b67e94658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e949a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e94b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e94cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e94e40"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e93020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e931a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e93330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e934b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b4b67e97968" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b4b67e97968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e97cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e97e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67ea4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ea41a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ea4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ea44b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ea4640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ea47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b4b67ea9968" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b4b67ea9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67ea9cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67ea9e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67ea8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ea81a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ea8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ea84b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ea8640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ea87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b4b67e7e968" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b4b67e7e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e7ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e7ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e7d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e7d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e7d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e7d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e7d640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e7d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b4b67e8f968" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b4b67e8f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e8fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e8fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e8e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e8e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e8e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e8e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e8e640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e8e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b4b67e91af0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b4b67e91af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e91e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e90020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e901a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e90330"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e904b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e90640"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e907c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e90950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b4b67ea2e00" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b4b67ea2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67ea11a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67ea1330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67ea14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ea1640"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ea17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ea1950"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ea1ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ea1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b4b67eaf658" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b4b67eaf658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eaf9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eafb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eafcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eafe40"/>
        <function-ref name="get" scoped="" ref="0x2b4b67eae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67eae1a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eae330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eae4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b4b67eb9348" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b4b67eb9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eb9698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eb9820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eb99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eb9b30"/>
        <function-ref name="get" scoped="" ref="0x2b4b67eb9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67eb9e40"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eb8020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eb81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b4b67e9f1a0" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b4b67e9f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e9f4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e9f678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e9f800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e9f988"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e9fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e9fc98"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e9fe20"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b4b67e7be00" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b4b67e7be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e881a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e88330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e884b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e88640"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e887c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e88950"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e88ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e88c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b4b67e8b020" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b4b67e8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e8b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e8b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e8b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e8b808"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e8b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e8bb18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e8bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e8be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b4b67ebb020" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b4b67ebb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67ebb370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67ebb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67ebb680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ebb808"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ebb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ebbb18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ebbca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ebbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b4b67e89348" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b4b67e89348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e89698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e89820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e899a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e89b30"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e89cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e89e40"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e96020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b4b67e99658" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b4b67e99658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e999a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e99b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e99cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e99e40"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e981a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e98330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b4b67eab658" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b4b67eab658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eab9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eabb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eabcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eabe40"/>
        <function-ref name="get" scoped="" ref="0x2b4b67eaa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67eaa1a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eaa330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eaa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b4b67eb1348" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b4b67eb1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eb1698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eb1820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eb19a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eb1b30"/>
        <function-ref name="get" scoped="" ref="0x2b4b67eb1cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67eb1e40"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eb0020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eb01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b4b67e85348" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b4b67e85348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e85698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e85820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e859a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e85b30"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e85cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e85e40"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e84020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b4b67e83658" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b4b67e83658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e839a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e83b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e83cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e83e40"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e82020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e821a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e82330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e824b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b4b67e937e0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b4b67e937e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e93b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e93cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e93e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e92020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e921a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e92330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e924b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e92640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b4b67ea4af0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b4b67ea4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67ea4e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67ea3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67ea31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ea3330"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ea34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ea3640"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ea37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ea3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b4b67ea8af0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b4b67ea8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67ea8e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67ea7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67ea71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ea7330"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ea74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ea7640"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ea77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ea7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b4b67e7daf0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b4b67e7daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e7de40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e7c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e7c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e7c330"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e7c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e7c640"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e7c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e7c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b4b67e8eaf0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b4b67e8eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e8d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e8d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e8d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e8d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e8d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e8d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e8d950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e8dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b4b67e90c78" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b4b67e90c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e9d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e9d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e9d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e9d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e9d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e9d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e9d950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e9dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b4b67eae7e0" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b4b67eae7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eaeb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eaecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eaee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ead020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ead1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ead330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ead4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ead640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b4b67e9b020" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b4b67e9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e9b570"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e9b6f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e9b880"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e9ba08"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e9bb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e9bd18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e9a020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b4b67e9e348" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b4b67e9e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e9e698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e9e820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e9e9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e9eb30"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e9ecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e9ee40"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eac020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b4b67eb3020" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b4b67eb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eb3370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eb34f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eb3680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eb3808"/>
        <function-ref name="get" scoped="" ref="0x2b4b67eb3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67eb3b18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eb3ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eb3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b4b67eb84d0" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b4b67eb84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eb8820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eb89a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eb8b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eb8cb8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67eb8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67eb7020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eb71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eb7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b4b67e87020" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b4b67e87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e87370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e874f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e87680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e87808"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e87990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e87b18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e87ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e87e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b4b67e8a1a0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b4b67e8a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e8a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e8a678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e8a800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e8a988"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e8ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e8ac98"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e8ae20"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b4b67ea7c78" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b4b67ea7c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67ea5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67ea51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67ea5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ea54b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ea5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ea57c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ea5950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ea5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b4b67e964d0" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b4b67e964d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e96820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e969a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e96b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e96cb8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e96e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e94020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e941a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e94330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b4b67e987e0" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b4b67e987e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e98b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e98cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e98e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e97020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e97330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e974b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e97640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b4b67eaa7e0" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b4b67eaa7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eaab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eaacb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eaae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ea9020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ea91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ea9330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ea94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ea9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b4b67eb04d0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b4b67eb04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eb0820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eb09a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eb0b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eb0cb8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67eb0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67eaf020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eaf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eaf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b4b67e737d0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b4b67e737d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e73b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e73ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e73e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e7e020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e7e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e7e330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e7e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e7e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b4b67e827e0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b4b67e827e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e82b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e82cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e82e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e8f020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e8f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e8f330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e8f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e8f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b4b67e92968" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b4b67e92968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e92cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e92e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e91020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e911a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e91330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e914b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e91640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e917c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b4b67ea3c78" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b4b67ea3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67ea2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67ea21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67ea2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ea24b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ea2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ea27c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ea2950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ea2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b4b67eba1a0" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b4b67eba1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eba4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eba678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67eba800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67eba988"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ebab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ebac98"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ebae20"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b4b67ea0020" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b4b67ea0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67ea0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67ea04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67ea0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67ea0808"/>
        <function-ref name="get" scoped="" ref="0x2b4b67ea0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67ea0b18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67ea0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67ea0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b4b67e9de00" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b4b67e9de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e9c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e9c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e9c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e9c640"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e9c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e9c950"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e9cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e9cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b4b67e7cc78" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b4b67e7cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e7b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e7b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e7b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e7b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e7b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e7b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e7b950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e7bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b4b67e8de00" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b4b67e8de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67e8c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67e8c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67e8c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67e8c640"/>
        <function-ref name="get" scoped="" ref="0x2b4b67e8c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67e8c950"/>
        <function-ref name="set" scoped="" ref="0x2b4b67e8cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67e8cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b4b67eff430" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b4b67eff430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67eff780"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67eff908"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67effa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67effc18"/>
        <function-ref name="get" scoped="" ref="0x2b4b67effda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67efe020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67efe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67efe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b4b67f0c8c8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b4b67f0c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f0cc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f0cda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f0b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f0b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f0b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f0b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f0b640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f0b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b4b67f011e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b4b67f011e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f01538"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f016c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f01848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f019d0"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f01b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f01ce0"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f01e68"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b4b67efe5b8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b4b67efe5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67efe908"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67efea90"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67efec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67efeda0"/>
        <function-ref name="get" scoped="" ref="0x2b4b67efd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67efd1a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67efd330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67efd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b4b67f0ba50" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b4b67f0ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f0bda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f0a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f0a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f0a330"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f0a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f0a640"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f0a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f0a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b4b67f002a8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b4b67f002a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f005f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f00780"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f00908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f00a90"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f00c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f00da0"/>
        <function-ref name="set" scoped="" ref="0x2b4b67eff020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67eff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b4b67efd740" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b4b67efd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67efda90"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67efdc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67efdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f0c020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f0c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f0c330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f0c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f0c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b4b67f0abd8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b4b67f0abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f09020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f091a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f09330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f094b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f09640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f097c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f09950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f09ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68264520" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68264520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68264870"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b682649f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68264b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68264d08"/>
        <function-ref name="get" scoped="" ref="0x2b4b68263020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b682631a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b68263330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b682634b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6827f6a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6827f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6827f9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6827fb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6827fd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6827e020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6827e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6827e330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6827e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6827e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6827c710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6827c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6827ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6827cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6827cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6827b020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6827b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6827b330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6827b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6827b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68279710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68279710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68279a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68279be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68279d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68277020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68277330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682774b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68277640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68275710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68275710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68275a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68275be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68275d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68274020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68274330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682744b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68274640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68272710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68272710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68272a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68272be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68272d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6828f020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6828f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6828f330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6828f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6828f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6828d710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6828d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6828da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6828dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6828dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6828c020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6828c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6828c330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6828c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6828c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6828a710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6828a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6828aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6828abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6828ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68289020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68289330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682894b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68289640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b4b67f11e18" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b4b67f11e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f101a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f10330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f104b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f10640"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f107c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f10950"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f10ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f10c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b4b67f0d2a8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b4b67f0d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f0d5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f0d780"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f0d908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f0da90"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f0dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f0dda0"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f1b020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f1b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b4b67f13bd0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b4b67f13bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f12020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f121a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f12330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f124b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f12640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f127c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f12950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f12ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b4b67f0f020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b4b67f0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f0f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f0f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f0f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f0f808"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f0f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f0fb18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f0fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f0fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b4b67f1b430" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b4b67f1b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f1b780"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f1b908"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f1ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f1bc18"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f1bda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f1a020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f1a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f1a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b4b67f12d60" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b4b67f12d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f110d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f11260"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f113e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f11570"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f116f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f11880"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f11a08"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f11b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b4b67f0e120" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b4b67f0e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f0e470"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f0e5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f0e780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f0e908"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f0ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f0ec18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f0eda0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b4b67f1a5b8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b4b67f1a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f1a908"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f1aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f1ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f1ada0"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f19020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f191a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f19330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f194b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b682d46a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b682d46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b682d49f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b682d4b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b682d4d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b682d3020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682d31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b682d3330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682d34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b682d3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b682d1710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b682d1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b682d1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b682d1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b682d1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b682d0020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682d01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b682d0330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682d04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b682d0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b682ce710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b682ce710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b682cea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b682cebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b682ced70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b682ed020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682ed1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b682ed330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682ed4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b682ed640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b682eb710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b682eb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b682eba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b682ebbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b682ebd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b682e9020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682e91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b682e9330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682e94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b682e9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b682e7710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b682e7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b682e7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b682e7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b682e7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b682e6020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682e61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b682e6330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682e64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b682e6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b682e4710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b682e4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b682e4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b682e4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b682e4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b682e3020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682e31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b682e3330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682e34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b682e3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b682e1710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b682e1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b682e1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b682e1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b682e1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b682e0020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682e01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b682e0330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682e04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b682e0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b682de710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b682de710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b682dea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b682debe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b682ded70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b682fd020"/>
        <function-ref name="get" scoped="" ref="0x2b4b682fd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b682fd330"/>
        <function-ref name="set" scoped="" ref="0x2b4b682fd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b682fd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b4b67f22740" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b4b67f22740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f22a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f22c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f22da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f20020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f20330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f204b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f20640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b4b67f1ebd8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b4b67f1ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f1d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f1d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f1d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f1d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f1d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f1d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f1d950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f1dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b4b67f24500" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b4b67f24500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f24850"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f249d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f24b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f24ce8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f24e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f23020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f231a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f23330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b4b67f208c8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b4b67f208c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f20c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f20da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f1f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f1f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f1f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f1f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f1f640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f1f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b4b67f1dd60" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b4b67f1dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f2d0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f2d260"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f2d3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f2d570"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f2d6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f2d880"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f2da08"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f2db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b4b67f235b8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b4b67f235b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f23908"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f23a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f23c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f23da0"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f22020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f221a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f22330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f224b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b4b67f1fa50" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b4b67f1fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f1fda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f1e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f1e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f1e330"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f1e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f1e640"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f1e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f1e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b4b67f2de18" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b4b67f2de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f2c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f2c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f2c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f2c640"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f2c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f2c950"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f2cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f2cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6832e6a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6832e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6832e9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6832eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6832ed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6834f020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6834f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6834f330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6834f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6834f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6834d710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6834d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6834da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6834dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6834dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6834c020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6834c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6834c330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6834c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6834c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6834a710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6834a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6834aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6834abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6834ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68349020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683491a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68349330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683494b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68349640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68347710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68347710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68347a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68347be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68347d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68346020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683461a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68346330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683464b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68346640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68344710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68344710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68344a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68344be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68344d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68342020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68342330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683424b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68342640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68340710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68340710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68340a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68340be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68340d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6833f020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6833f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6833f330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6833f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6833f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6835f710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6835f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6835fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6835fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6835fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6835e020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6835e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6835e330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6835e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6835e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6835c710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6835c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6835ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6835cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6835cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6835b020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6835b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6835b330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6835b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6835b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b4b67f35120" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b4b67f35120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f35470"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f355f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f35780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f35908"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f35a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f35c18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f35da0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b4b67f325b8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b4b67f325b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f32908"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f32a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f32c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f32da0"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f31020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f311a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f31330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f314b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b4b67f26e40" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b4b67f26e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f251c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f25348"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f254d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f25658"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f257e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f25968"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f25af0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f25c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b4b67f342a8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b4b67f342a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f345f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f34780"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f34908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f34a90"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f34c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f34da0"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f33020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b4b67f31740" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b4b67f31740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f31a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f31c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f31da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f30020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f30330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f304b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f30640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b4b67f36020" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b4b67f36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f36370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f364f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f36680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f36808"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f36990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f36b18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f36ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f36e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b4b67f33430" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b4b67f33430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f33780"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f33908"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f33a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f33c18"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f33da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f32020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f321a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f32330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b4b67f308c8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b4b67f308c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f30c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f30da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f2f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f2f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f2f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f2f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f2f640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f2f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b683b66a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b683b66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b683b69f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b683b6b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b683b6d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b683b5020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683b51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b683b5330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683b54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b683b5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b683b3710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b683b3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b683b3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b683b3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b683b3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b683b2020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b683b2330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683b24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b683b2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b683b0710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b683b0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b683b0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b683b0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b683b0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b683af020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683af1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b683af330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683af4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b683af640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b683ad710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b683ad710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b683ada60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b683adbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b683add70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b683ac020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683ac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b683ac330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683ac4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b683ac640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b683aa710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b683aa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b683aaa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b683aabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b683aad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b683a8020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683a81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b683a8330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683a84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b683a8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b683a6710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b683a6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b683a6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b683a6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b683a6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b683a5020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683a51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b683a5330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683a54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b683a5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b683c7710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b683c7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b683c7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b683c7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b683c7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b683c6020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683c61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b683c6330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683c64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b683c6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b683c4710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b683c4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b683c4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b683c4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b683c4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b683c3020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b683c3330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683c34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b683c3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b4b67f39bd8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b4b67f39bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f38020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f381a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f38330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f384b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f38640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f387c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f38950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f38ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b4b67f47020" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b4b67f47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f47370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f474f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f47680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f47808"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f47990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f47b18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f47ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f47e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b4b67f3b930" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b4b67f3b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f3bc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f3be08"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f3a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f3a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f3a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f3a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f3a640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f3a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b4b67f38d60" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b4b67f38d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f370d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f37260"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f373e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f37570"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f376f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f37880"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f37a08"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f37b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b4b67f46120" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b4b67f46120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f46470"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f465f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f46780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f46908"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f46a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f46c18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f46da0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b4b67f3aa50" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b4b67f3aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f3ada0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f39020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f391a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f39330"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f394b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f39640"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f397c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f39950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b4b67f37e18" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b4b67f37e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f481a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f48330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f484b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f48640"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f487c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f48950"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f48ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f48c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b4b67f452a8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b4b67f452a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f455f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f45780"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f45908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f45a90"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f45c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f45da0"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f43020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b684036a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b684036a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b684039f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68403b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68403d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68402020"/>
        <function-ref name="get" scoped="" ref="0x2b4b684021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68402330"/>
        <function-ref name="set" scoped="" ref="0x2b4b684024b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68402640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68400710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68400710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68400a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68400be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68400d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b683ff020"/>
        <function-ref name="get" scoped="" ref="0x2b4b683ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b683ff330"/>
        <function-ref name="set" scoped="" ref="0x2b4b683ff4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b683ff640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68421710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68421710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68421a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68421be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68421d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68420020"/>
        <function-ref name="get" scoped="" ref="0x2b4b684201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68420330"/>
        <function-ref name="set" scoped="" ref="0x2b4b684204b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68420640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6841e710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6841e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6841ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6841ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6841ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6841d020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6841d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6841d330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6841d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6841d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6841b710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6841b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6841ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6841bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6841bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6841a020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6841a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6841a330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6841a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6841a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68418710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68418710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68418a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68418be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68418d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68416020"/>
        <function-ref name="get" scoped="" ref="0x2b4b684161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68416330"/>
        <function-ref name="set" scoped="" ref="0x2b4b684164b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68416640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68414710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68414710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68414a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68414be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68414d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68413020"/>
        <function-ref name="get" scoped="" ref="0x2b4b684131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68413330"/>
        <function-ref name="set" scoped="" ref="0x2b4b684134b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68413640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68411710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68411710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68411a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68411be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68411d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68434020"/>
        <function-ref name="get" scoped="" ref="0x2b4b684341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68434330"/>
        <function-ref name="set" scoped="" ref="0x2b4b684344b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68434640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b4b67f4e430" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b4b67f4e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f4e780"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f4e908"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f4ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f4ec18"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f4eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f4d020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f4d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f4d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b4b67f4a8c8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b4b67f4a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f4ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f4ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f49020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f491a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f49330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f494b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f49640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f497c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b4b67f501e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b4b67f501e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f50538"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f506c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f50848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f509d0"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f50b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f50ce0"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f50e68"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b4b67f4d5b8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b4b67f4d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f4d908"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f4da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f4dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f4dda0"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f4c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f4c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f4c330"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f4c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b4b67f49a50" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b4b67f49a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f49da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f5a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f5a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f5a330"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f5a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f5a640"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f5a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f5a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b4b67f4f2a8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b4b67f4f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f4f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f4f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f4f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f4fa90"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f4fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f4fda0"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f4e020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b4b67f4c740" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b4b67f4c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f4ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f4cc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f4cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f4a020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f4a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f4a330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f4a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f4a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b4b67f5abd8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b4b67f5abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f59020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f591a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f59330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f594b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f59640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f597c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f59950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f59ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6847b6a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6847b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6847b9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6847bb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6847bd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6847a020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6847a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6847a330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6847a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6847a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68478710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68478710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68478a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68478be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68478d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68477020"/>
        <function-ref name="get" scoped="" ref="0x2b4b684771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68477330"/>
        <function-ref name="set" scoped="" ref="0x2b4b684774b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68477640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68475710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68475710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68475a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68475be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68475d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68474020"/>
        <function-ref name="get" scoped="" ref="0x2b4b684741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68474330"/>
        <function-ref name="set" scoped="" ref="0x2b4b684744b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68474640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68472710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68472710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68472a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68472be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68472d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68471020"/>
        <function-ref name="get" scoped="" ref="0x2b4b684711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68471330"/>
        <function-ref name="set" scoped="" ref="0x2b4b684714b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68471640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6846f710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6846f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6846fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6846fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6846fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6846e020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6846e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6846e330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6846e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6846e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b68492710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b68492710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b68492a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68492be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b68492d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68490020"/>
        <function-ref name="get" scoped="" ref="0x2b4b684901a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68490330"/>
        <function-ref name="set" scoped="" ref="0x2b4b684904b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68490640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6848e710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6848e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6848ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6848ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6848ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6848d020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6848d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6848d330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6848d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6848d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b6848b710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b6848b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6848ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6848bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6848bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6848a020"/>
        <function-ref name="get" scoped="" ref="0x2b4b6848a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6848a330"/>
        <function-ref name="set" scoped="" ref="0x2b4b6848a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6848a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67f53ac0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67f53ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f53e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f73020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f731a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f73330"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f734b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f73640"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f737c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f73950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67f6fdb8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67f6fdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f6e170"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f6e2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f6e480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f6e608"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f6e790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f6e918"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f6eaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f6ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67f7c3e0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67f7c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f7c730"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f7c8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f7ca40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f7cbc8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f7cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f7b020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f7b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f7b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67f777e8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67f777e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f77b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f77cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f77e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f76020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f76330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f764b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f76640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67f84c38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67f84c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f83020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f831a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f83330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f834b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f83640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f837c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f83950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f83ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67f7f020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67f7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f7f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f7f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f7f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f7f808"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f7f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f7fb18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f7fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f7fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67f8c480" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67f8c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f8c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f8c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f8cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f8cc68"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f8cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f8b020"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f8b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f8b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67f997e8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67f997e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f99b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f99cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f99e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f98020"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f981a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f98330"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f984b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f98640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67f95970" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67f95970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f95cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f95e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f94020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f941a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f94330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f944b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f94640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f947c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67fa2ab0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67fa2ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67fa2e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67fa1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67fa11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67fa1330"/>
        <function-ref name="get" scoped="" ref="0x2b4b67fa14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67fa1640"/>
        <function-ref name="set" scoped="" ref="0x2b4b67fa17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67fa1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67f9dc38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67f9dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67f9c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67f9c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67f9c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67f9c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b67f9c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67f9c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b67f9c950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67f9cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67faa020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67faa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67faa370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67faa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67faa680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67faa808"/>
        <function-ref name="get" scoped="" ref="0x2b4b67faa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67faab18"/>
        <function-ref name="set" scoped="" ref="0x2b4b67faaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67faae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4b67fa5180" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4b67fa5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b67fa54d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b67fa5658"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b67fa57e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b67fa5968"/>
        <function-ref name="get" scoped="" ref="0x2b4b67fa5af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b67fa5c78"/>
        <function-ref name="set" scoped="" ref="0x2b4b67fa5e00"/>
        <function-ref name="clr" scoped="" ref="0x2b4b67fa4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4b67fe3020" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4b67fe3020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4b67d55c48"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4b67d55c48"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67fe3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b4b67fe3650" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4b67fe3650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b4b67fe39a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b4b67fe3b28"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b4b67fe3cb0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b4b67fe3e38"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b4b67fe2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b4b67fffa60" loc="49:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b4b67fffa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67fffdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b4b68000278" loc="46:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b4b68000278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b4b680005c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b4b67fff398" loc="48:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b4b67fff398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67fff6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b4b680008b0" loc="47:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b4b680008b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b68000c00"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b4b68000d88"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b4b67fff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b4b67d67ca0" loc="37:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b4b67d67ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4b67d54020"/>
        <function-ref name="runTask" scoped="" ref="0x2b4b67d541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b4b67d5b390" loc="36:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b4b67d5b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67d5b6e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b4b67d5b868"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b4b67d5b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b4b67e16b08" loc="45:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b4b67e16b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4b67e16e58"/>
        <function-ref name="runTask" scoped="" ref="0x2b4b67e15020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b4b67e20020" loc="46:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b4b67e20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b4b67e20370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b4b67e17c00" loc="44:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b4b67e17c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b67e16020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b4b67e161a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b4b67e16330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b4b67e422b0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4b67e422b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b4b67e42600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b4b67d66dc8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b4b67d66dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b4b67e3a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b4b67e36240" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b4b67e36240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b4b67e36590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b4b680117e8" loc="41:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b4b680117e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b68023a18"/>
        <function-ref name="fired" scoped="" ref="0x2b4b68006158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b68006e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b680069f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b680222e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b68023e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b680065a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b68007370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b68023448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b68007810"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68007cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b4b6802b770" loc="45:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b4b6802b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b4b6802bac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeTask" ref="0x2b4b68034590" loc="58:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="computeTask" scoped="" ref="0x2b4b68034590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4b680348e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b4b68034a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2b4b68022900" loc="42:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2b4b68022900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b6801ebc0"/>
        <function-ref name="fired" scoped="" ref="0x2b4b6801f278"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b6801e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b6801fb18"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b6801d4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b6801d088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b6801f6c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b68021490"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b6801e5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b68021930"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68021dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4b6802c080" loc="44:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4b6802c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4b6802c3d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4b6802c558"/>
        <function-ref name="led1On" scoped="" ref="0x2b4b6802c6e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4b6802c868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4b6802c9f0"/>
        <function-ref name="get" scoped="" ref="0x2b4b6802cb78"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4b6802cd00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4b6802b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b6802b020"/>
        <function-ref name="led0On" scoped="" ref="0x2b4b6802b1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b4b6802b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2b4b6801daf0" loc="43:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x2b4b6801daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b6802ed60"/>
        <function-ref name="fired" scoped="" ref="0x2b4b6801a470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b6802e1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b6801ad10"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b6802d648"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b6802d1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b6801a8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b6801c670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b6802e790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b6801cb10"/>
        <function-ref name="stop" scoped="" ref="0x2b4b6801a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b4b680402e8" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4b680402e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4b68040638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4b680407c0"/>
        <function-ref name="led1On" scoped="" ref="0x2b4b68040948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4b68040ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4b68040c58"/>
        <function-ref name="get" scoped="" ref="0x2b4b68040de0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4b6803d020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4b6803d640"/>
        <function-ref name="set" scoped="" ref="0x2b4b6803d1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b4b6803d330"/>
        <function-ref name="led2On" scoped="" ref="0x2b4b6803d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b4b6804e1b0" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b4b6804e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6804e500"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6804e688"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6804e810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6804e998"/>
        <function-ref name="get" scoped="" ref="0x2b4b6804eb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6804eca8"/>
        <function-ref name="set" scoped="" ref="0x2b4b6804ee30"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6804d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4b6803a4f0" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4b6803a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b6803a840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b4b6804d338" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b4b6804d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6804d688"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6804d810"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6804d998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6804db20"/>
        <function-ref name="get" scoped="" ref="0x2b4b6804dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6804de30"/>
        <function-ref name="set" scoped="" ref="0x2b4b6804b020"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6804b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b4b6803aab8" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4b6803aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4b6803ae08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4b6804f020"/>
        <function-ref name="led1On" scoped="" ref="0x2b4b6804f1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4b6804f330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4b6804f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b6804f640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4b6804f7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4b6804fde8"/>
        <function-ref name="set" scoped="" ref="0x2b4b6804f950"/>
        <function-ref name="led0On" scoped="" ref="0x2b4b6804fad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b4b6804fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b4b6804b4c0" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b4b6804b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6804b810"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6804b998"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6804bb20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6804bca8"/>
        <function-ref name="get" scoped="" ref="0x2b4b6804be30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6804a020"/>
        <function-ref name="set" scoped="" ref="0x2b4b6804a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6804a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b4b6805c988" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b4b6805c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6805ccd8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6805ce60"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6805b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6805b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b6805b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6805b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4b6805b640"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6805b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b4b6805bb20" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b4b6805bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6805be70"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b68070020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b680701a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b68070330"/>
        <function-ref name="get" scoped="" ref="0x2b4b680704b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b68070640"/>
        <function-ref name="set" scoped="" ref="0x2b4b680707c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4b68070950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b4b6806fd90" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4b6806fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b6806e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b4b68070ca8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b4b68070ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4b6806f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4b6806f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4b6806f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4b6806f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4b6806f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4b6806f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4b6806f950"/>
        <function-ref name="clr" scoped="" ref="0x2b4b6806fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4b68067a60" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4b68067a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b6821fd60"/>
        <function-ref name="fired" scoped="" ref="0x2b4b68220470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b6821f1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b68220d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b6821e648"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b6821e1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b682208c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b68222620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b6821f790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b68222ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68220020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b4b68077e28" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b4b68077e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b680710c0"/>
        <function-ref name="fired" scoped="" ref="0x2b4b68073798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b680724d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b68072088"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b68071960"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b68071510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b68073be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b680749e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b68072aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b68074e80"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68073348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b4b680824a0" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b4b680824a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b6807e6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b4b68081db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b6807fad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b6807f688"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b6807d020"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b6807eb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b6807f238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b68081020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b6807e0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b680814c0"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68081960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4b6808f980" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4b6808f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4b68091560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4b68085758" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4b68085758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b68085aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b4b68092e40" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b4b68092e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4b68096be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4b680a7548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4b680a70c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4b680a79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4b6808c020" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4b6808c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b6808c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b4b6809a838" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b4b6809a838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b68098020"/>
        <function-ref name="fired" scoped="" ref="0x2b4b6808a020"/>
        <function-ref name="startAt" scoped="" ref="0x2b4b6808a930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b6808a4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4b680984a8"/>
        <function-ref name="start" scoped="" ref="0x2b4b6808b5e0"/>
        <function-ref name="stop" scoped="" ref="0x2b4b6808bab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4b6818b998" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4b6818b998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b68188020"/>
        <function-ref name="fired" scoped="" ref="0x2b4b681890c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b4b681899d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b68189548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4b681884a8"/>
        <function-ref name="start" scoped="" ref="0x2b4b6818a730"/>
        <function-ref name="stop" scoped="" ref="0x2b4b6818ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4b6818b1f0" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4b6818b1f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b4b67d558e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b4b67d558e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b6818b540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4b68188a90" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4b68188a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4b681a0828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4b6819f190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4b681a0cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4b6819f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b4b6854eb60" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b4b6854eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b4b6854d020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b4b6854d1a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b4b6854d330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b4b6854d4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b4b6854d640"/>
        <function-ref name="setControl" scoped="" ref="0x2b4b6854d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4b68559808" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4b68559808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b68555020"/>
        <function-ref name="fired" scoped="" ref="0x2b4b68557020"/>
        <function-ref name="startAt" scoped="" ref="0x2b4b68557930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b685574a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4b685554a8"/>
        <function-ref name="start" scoped="" ref="0x2b4b68558598"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68558a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4b68559060" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4b68559060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4b685593b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4b68555a90" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4b68555a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4b68554828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4b68553190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4b68554cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4b68553618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b4b6857cbb0" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b4b6857cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b4b6857b020"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b4b6857b1a8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b4b6857b330"/>
        <function-ref name="countBusy" scoped="" ref="0x2b4b6857b4b8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b4b6857b640"/>
        <function-ref name="setAssr" scoped="" ref="0x2b4b6857b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b4b6854db58" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b4b6854db58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b4b6857c310"/>
        <function-ref name="fired" scoped="" ref="0x2b4b6854a0c0"/>
        <function-ref name="get" scoped="" ref="0x2b4b6854b728"/>
        <function-ref name="reset" scoped="" ref="0x2b4b6854a548"/>
        <function-ref name="isOn" scoped="" ref="0x2b4b6857c798"/>
        <function-ref name="set" scoped="" ref="0x2b4b6854bbb0"/>
        <function-ref name="start" scoped="" ref="0x2b4b6854a9d0"/>
        <function-ref name="stop" scoped="" ref="0x2b4b6854ae58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b4b68553b98" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4b68553b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b4b6854fdb8"/>
        <function-ref name="test" scoped="" ref="0x2b4b6854f4a8"/>
        <function-ref name="get" scoped="" ref="0x2b4b68552760"/>
        <function-ref name="setScale" scoped="" ref="0x2b4b6854e270"/>
        <function-ref name="getScale" scoped="" ref="0x2b4b6854e748"/>
        <function-ref name="reset" scoped="" ref="0x2b4b68550580"/>
        <function-ref name="overflow" scoped="" ref="0x2b4b685500f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4b6854f930"/>
        <function-ref name="set" scoped="" ref="0x2b4b68552be8"/>
        <function-ref name="start" scoped="" ref="0x2b4b68550a08"/>
        <function-ref name="stop" scoped="" ref="0x2b4b6854f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b4b6812b020" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b4b6812b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b4b6812b370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b4b6812b4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b4b6812b680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b4b6812b808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b4b6812b990"/>
        <function-ref name="setControl" scoped="" ref="0x2b4b6812bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b4b68126228" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b4b68126228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b4b68126578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b4b68126700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b4b68126888"/>
        <function-ref name="countBusy" scoped="" ref="0x2b4b68126a10"/>
        <function-ref name="getAssr" scoped="" ref="0x2b4b68126b98"/>
        <function-ref name="setAssr" scoped="" ref="0x2b4b68126d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b4b6812a020" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b4b6812a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b4b681287a8"/>
        <function-ref name="fired" scoped="" ref="0x2b4b68129560"/>
        <function-ref name="get" scoped="" ref="0x2b4b6812aba0"/>
        <function-ref name="reset" scoped="" ref="0x2b4b681299e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4b68128c30"/>
        <function-ref name="set" scoped="" ref="0x2b4b68129088"/>
        <function-ref name="start" scoped="" ref="0x2b4b68129e70"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68128320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4b6811cde8" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4b6811cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b4b681150f8"/>
        <function-ref name="test" scoped="" ref="0x2b4b68116798"/>
        <function-ref name="get" scoped="" ref="0x2b4b68119a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b4b68115580"/>
        <function-ref name="getScale" scoped="" ref="0x2b4b68115a58"/>
        <function-ref name="reset" scoped="" ref="0x2b4b68117980"/>
        <function-ref name="overflow" scoped="" ref="0x2b4b681174f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4b68116c20"/>
        <function-ref name="set" scoped="" ref="0x2b4b68117020"/>
        <function-ref name="start" scoped="" ref="0x2b4b68117e08"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68116310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b4b68136160" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b4b68136160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b4b681364b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b4b68136638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b4b681367c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b4b68136948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b4b68136ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b4b68136c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b4b68131268" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4b68131268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b4b681315b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b4b68131968" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b4b68131968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b4b68131cb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b4b68131e40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b4b68130020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b4b681301a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b4b68130330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b4b681304b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b4b68135190" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b4b68135190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b4b68133930"/>
        <function-ref name="fired" scoped="" ref="0x2b4b681346d0"/>
        <function-ref name="get" scoped="" ref="0x2b4b68135d10"/>
        <function-ref name="reset" scoped="" ref="0x2b4b68134b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b4b68133db8"/>
        <function-ref name="set" scoped="" ref="0x2b4b681341f8"/>
        <function-ref name="start" scoped="" ref="0x2b4b68133020"/>
        <function-ref name="stop" scoped="" ref="0x2b4b681334a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4b681220f8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4b681220f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b4b68138270"/>
        <function-ref name="test" scoped="" ref="0x2b4b68120930"/>
        <function-ref name="get" scoped="" ref="0x2b4b68122c78"/>
        <function-ref name="setScale" scoped="" ref="0x2b4b681386f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b4b68138bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b4b68121a90"/>
        <function-ref name="overflow" scoped="" ref="0x2b4b68121608"/>
        <function-ref name="isOn" scoped="" ref="0x2b4b68120db8"/>
        <function-ref name="set" scoped="" ref="0x2b4b68121130"/>
        <function-ref name="start" scoped="" ref="0x2b4b68120020"/>
        <function-ref name="stop" scoped="" ref="0x2b4b681204a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b4b681c0cf0" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b4b681c0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4b681bf0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b4b681bf228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b4b681c4c70" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4b681c4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b681c0410"/>
        <function-ref name="fired" scoped="" ref="0x2b4b681c24a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4b681c2db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b681c2930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4b681c0898"/>
        <function-ref name="start" scoped="" ref="0x2b4b681c39f0"/>
        <function-ref name="stop" scoped="" ref="0x2b4b681c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4b681c9ab0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4b681c9ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b681c5d60"/>
        <function-ref name="fired" scoped="" ref="0x2b4b681c7470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b681c51c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b681c7d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b681c4648"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b681c41f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b681c78c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b681c8620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b681c5790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b681c8ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b4b681c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b4b6821a930" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b4b6821a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4b6821ac80"/>
        <function-ref name="runTask" scoped="" ref="0x2b4b6821ae08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b4b68203858" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b4b68203858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b6821bbc0"/>
        <function-ref name="fired" scoped="" ref="0x2b4b6821d1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b6821b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b6821da60"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b6821a4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b6821a088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b6821d610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b682023d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b6821b5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b68202878"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68202d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4b682095e0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4b682095e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b68205988"/>
        <function-ref name="fired" scoped="" ref="0x2b4b68207020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b68207d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b68207900"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b682032d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b68205df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b68207490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b68208198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b68205398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b68208658"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68208b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4b68216128" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4b68216128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4b68216ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4b68229330" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4b68229330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4b682280c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4b682289d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4b68228548"/>
        <function-ref name="overflow" scoped="" ref="0x2b4b68228e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4b68239020" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4b68239020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b682352b8"/>
        <function-ref name="fired" scoped="" ref="0x2b4b68237978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b682366c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b68236278"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b68235b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b68235708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b68237dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b68239b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b68236c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b68237088"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68237528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4b68232550" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4b68232550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4b67dd9530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4b67dd9888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4b6822f768"/>
        <function-ref name="fired" scoped="" ref="0x2b4b68231e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4b68230b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4b68230728"/>
        <function-ref name="getdt" scoped="" ref="0x2b4b6822d088"/>
        <function-ref name="gett0" scoped="" ref="0x2b4b6822fbb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4b682302d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4b682310c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4b6822f198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4b68231560"/>
        <function-ref name="stop" scoped="" ref="0x2b4b68231a00"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b4b67e5e588" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4b67d61780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b4b67e51258" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b4b67e63408" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4b67517378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b4b67e63198" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b4b67e5bb98" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4b67517378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b4b67e585b8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b4b67e58348" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b4b67e640a8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b4b67e58dd0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b4b67e648f0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b4b67e7aab0" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b4b67e791d8" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b4b67e6dd20" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b4b67e77020" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4b67e7a400" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b4b67e79890" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4b67e6d020" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b4b67e6d690" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b4b67d5c020" loc="46:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b4b67d5b020" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b4b67d5c738" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b4b67d5eba0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4b67d61780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b4b67d673e0" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b4b67e15ca0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b4b67e35d60" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b4b67db81a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b4b67e3ae60" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4b68008940" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4b68008940"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b4b68012328" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b4b68017e68" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b4b68015ad8" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b4b68015540" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b4b68015858" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b4b68016da8" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b4b68011290" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b4b68012a48" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b4b68016610" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b4b680194a0" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b4b68019230" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b4b680149e0" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b4b68014448" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b4b68014760" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b4b68017020" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b4b68019c70" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4b680177c8" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b4b68027550" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b4b68027c88" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b4b68025420" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b4b680242a8" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b4b680398b0" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4b68037070" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b4b68025b38" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4b68037b70" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b4b68037900" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b4b68028df8" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b4b68024a18" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b4b68039178" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4b6807dbe8" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4b6807dbe8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b4b6808f4c8" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4b67517db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4b680943f8" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4b680943f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4b68094628" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68094628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b4b68093020" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68094628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b4b68092070" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b4b68093838" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b4b68092760" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4b6808ce10" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4b6808ce10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4b68089068" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68089068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b4b6809b958" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68089068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b4b68087a78" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b4b6809b020" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68089068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68089068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b4b6809ca08" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68089068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b4b6809cd28" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68089068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b4b6809c258" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b4b6809a110" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68089068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4b68089b28" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68089068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b4b680898b8" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b68089068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4b68087328" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b4b680c9a48" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67de7a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b4b67de7e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b4b680c4e18" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67df3100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b4b67df3508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b4b680c5c70" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67deb980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b4b67debd88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b4b680c4678" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67deb980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b4b67debd88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b4b680c4408" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67deb980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b4b67debd88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b4b680c3828" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67df3100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b4b67df3508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b4b680c35b8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67df3100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b4b67df3508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b4b680c54c8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67de7a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b4b67de7e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b4b680c5258" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67de7a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b4b67de7e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b4b680cd998" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b4b680cc1d8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b4b680cd290" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b4b680cc988" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b4b680cf0d8" loc="21:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67ded118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b4b67ded520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b4b680cfa88" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67ded118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b4b67ded520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b4b680cf818" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b4b67ded118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b4b67ded520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b4b680c1020" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b680c1020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b4b680d5738" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b4b680d79d0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4b680c18d8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b680c1020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b4b680d6110" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b4b680d4020" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4b680d7290" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b680c1020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b4b680d7020" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4b680c1020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4b680d6808" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4b680d5020" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b4b680bb418" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b4b680bb418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b4b680b6900" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b4b680b8a40" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4b680bbcb8" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b4b680bb418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b4b680b5290" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b4b680b5020" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b4b680b5a10" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4b67515910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b4b680b94c0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b4b680bad50" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b4b680b61d8" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4b67d56020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4b680ba630" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b4b680bb418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b4b680ba3c0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b4b680bb418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4b680b9bb8" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4b680b8328" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
